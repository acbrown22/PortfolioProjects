--Profile covid_deaths table
SELECT
    *
FROM
    covid_deaths
WHERE
    continent IS NOT NULL;
    
-- Profile covid_vac table
SELECT
    *
FROM
    covid_vac;
    
SELECT
    location,
    date,
    total_cases,
    new_cases, 
    total_deaths,
    population
FROM
    covid_deaths
ORDER BY
    location,
    date;
    
-- Total cases vs total deaths
-- Shows likelihood of dying if you contract covid in US
SELECT
    location,
    date,
    total_cases,
    total_deaths,
    (CAST(total_deaths AS REAL))/(CAST(total_cases AS REALZ)) * 100 AS death_percentage
FROM
    covid_deaths
WHERE
    location LIKE '%states%'
AND
     location NOT LIKE '%Virgin Islands%'
ORDER BY
    location,
    date;
    
-- Looking at total cases vs. population for US
SELECT
    location,
    date,
    total_cases,
    population,
    (CAST(total_cases AS REAL))/(CAST(population AS REAL)) * 100 AS percent_infected
FROM
    covid_deaths
WHERE
    location LIKE '%states%'
AND
    location NOT LIKE '%Virgin Islands%'
ORDER BY
    location,
    date;

-- Looking at countries with highest infection rate compared to population
SELECT
    location, 
    population, 
    MAX(CAST(total_cases AS REAL)) AS highest__case_count,
    MAX((CAST(total_cases AS REAL))/(CAST(population AS REAL))) * 100 AS percent_infected
FROM
    covid_deaths
GROUP BY
    location, 
    population
ORDER BY
    percent_infected DESC;
    
-- Showing countries with highest death count per population
SELECT
    location, 
    population, 
    MAX(CAST(total_deaths AS REAL)) AS highest_death_count,
    MAX((CAST(total_deaths AS REAL))/(CAST(population AS REAL))) * 100 AS percent_deceased
FROM
    covid_deaths
WHERE
    continent IS NOT NULL
GROUP BY
    location, 
    population
ORDER BY
    percent_deceased DESC;    
    
-- Countries with highest death count
SELECT
    location, 
    MAX(CAST(total_deaths AS REAL)) AS total_death_count
FROM
    covid_deaths
WHERE
    continent IS NOT NULL
GROUP BY
    location
ORDER BY
    total_death_count DESC;  
    
--Death figues by continent
SELECT
    continent,
    MAX(CAST(total_deaths AS REAL)) AS total_death_count
FROM
    covid_deaths
GROUP BY
    continent
ORDER BY
    total_death_count DESC;
    
-- Global new cases per day
SELECT
    date,
    SUM(CAST(new_cases AS REAL)) AS total_cases_per_day,
    SUM(CAST(new_deaths AS REAL)) AS total_deaths_per_day,
    SUM(CAST(new_deaths AS REAL))/SUM(CAST(new_cases AS REAL)) * 100 AS death_percentage
FROM
    covid_deaths
WHERE
    continent IS NOT NULL
GROUP BY
    date
ORDER BY
    date;
    
--JOIN both tables
SELECT
    *
FROM
    covid_deaths AS dea
INNER JOIN
    covid_vac AS vac
ON
    dea.location = vac.location
AND
    dea.date = vac.date;
    
-- Total population vs. vaccination
SELECT
    dea.location, 
    dea.date,
    dea.population,
    vac.new_vaccinations
FROM
    covid_deaths AS dea
JOIN
    covid_vac AS vac
ON
    dea.location = vac.location
AND
    dea.date = vac.date
WHERE
    dea.continent IS NOT NULL
ORDER BY
    dea.location,
    dea.date;

-- Partition By (use CTE)
WITH pop_vs_vac (location, date, population, new_vaccinations, rolling_people_vac)
AS
(
SELECT
    dea.location, 
    dea.date,
    dea.population,
    vac.new_vaccinations,
    SUM(CAST(vac.new_vaccinations AS REAL)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_people_vac
FROM
    covid_deaths AS dea
JOIN
    covid_vac AS vac
ON
    dea.location = vac.location
AND
    dea.date = vac.date
)
SELECT
    *, 
    (rolling_people_vac/population) * 100
FROM
    pop_vs_vac;

-- Create temp table and query from it
CREATE TEMP TABLE percent_pop_vac1 AS
SELECT
    dea.location, 
    dea.date,
    dea.population,
    vac.new_vaccinations,
    SUM(CAST(vac.new_vaccinations AS REAL)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_people_vac
FROM
    covid_deaths AS dea
JOIN
    covid_vac AS vac
ON
    dea.location = vac.location
AND
    dea.date = vac.date;

SELECT
    *, 
    (rolling_people_vac/population) * 100
FROM
    percent_pop_vac1;
    
-- Creating view to store data for later visualizations
CREATE VIEW percent_pop_vac2 AS
SELECT
    dea.location, 
    dea.date,
    dea.population,
    vac.new_vaccinations,
    SUM(CAST(vac.new_vaccinations AS REAL)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_people_vac
FROM
    covid_deaths AS dea
JOIN
    covid_vac AS vac
ON
    dea.location = vac.location
AND
    dea.date = vac.date;
    
-- Create view about global deaths
CREATE VIEW total_deaths AS
SELECT
    continent,
    MAX(CAST(total_deaths AS REAL)) AS total_death_count
FROM
    covid_deaths
GROUP BY
    continent
ORDER BY
    total_death_count DESC;